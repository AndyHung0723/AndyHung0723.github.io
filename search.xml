<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[[Hexo] Hexo 基本環境建置]]></title>
    <url>%2F2018%2F12%2F04%2F2018-12-04_Hexo_Created%2F</url>
    <content type="text"><![CDATA[Hexo優點 文章編輯使用MarkDown語法，好用且易學 可搭配GitHub Pages部屬，無須成本 中文支援度高 建立流程簡單，可快速搭建 有眾多優質的主題與外掛可搭配使用 環境安裝Git至官方網站下載並安裝 安裝Node.js至官方網站下載並安裝 初始化Hexo使用bash或命令提示字元依照以下流程進行建置 安裝CLI1$ npm install -g hexo-cli 初始化先建立好愈擺放部落格檔案的資料夾，並切換到該目錄下方(往後的操作都是在此目錄下進行)12$ cd &lt;folder&gt; #切換至目標目錄下$ hexo init &lt;folder&gt; #在該目錄下初始化Hexo相關套件 初始化完成後會建構一套預設版型與一篇範例文章 本地端運行1$ hexo server #或使用簡寫 hexo s 執行完成後造訪 http://localhost:4000 就會看到Hexo預設幫你建立好的網頁 建立GitHub PagesGithub提供兩種靜態網站1. 儲存庫的名稱為{用戶名稱}.github.io此類型每個帳號只能有一個，路徑為 https://{用戶名稱}.github.io 2. 任何專案下的gh-pages此類型沒有數量限制，路徑為 https://{用戶名稱}.github.io/{專案名稱} 建立儲存庫這邊使用第一種，新增一個以用戶名稱命名的儲存庫 將專案推到GitHub上12345$ git init$ git add .$ git commit -m "init"$ git remote add origin https://github.com/&#123;用戶名稱&#125;/&#123;用戶名稱&#125;.github.io.git$ git push -u origin master 部屬到GitHub Pages安裝自動部屬工具1$ npm install hexo-deployer-git --save 設定_config.yml於部落格目錄下找到_config.yml，搜尋檔案內的deploy區段並做以下設定 編譯出靜態網頁1$ hexo g 部屬到GitHub1$ hexo d 這樣就完成基本建置&amp;部屬囉！造訪 https://{用戶名稱}.github.io 可以觀看部屬上去的網站(有時須等待GitHub完成部屬，可能須等待3~5分鐘不等) 建立與刪除文章建立文章 執行以下指令建立新空白文章 1$ hexo new [postName] #postName為文章編輯，盡量以雙引號包裹避免錯誤 建立的文章會位於部落格目錄/source/_posts/目錄下 使用MarkDown完成編寫後，可先在本地端運行觀看成果 1$ hexo s 重新產生靜態頁面並部屬 1$ hexo d -g #這是上方教的 $ hexo g 與 $ hexo d 的結合版 刪除文章 於部落格目錄/source/_posts/找到愈刪除的文章檔案，執行刪除 清除已產生的靜態頁面 1$ hexo clean 重新產生靜態頁面並部屬 1$ hexo d -g #這是上方教的 $ hexo g 與 $ hexo d 的結合版 參考資料Hexo官方網站Hexo+GitHub，新手也可以快速建立部落格Hexo-環境建置]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
